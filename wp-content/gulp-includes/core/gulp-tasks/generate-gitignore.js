/*
 * @file
 *
 * - gulp generate-gitignore
 *
 * Build custom .gitignore according to gulp-includes/gulp-configuration.js.
 *
 */

const pump = require('pump'),
    config = require('../../gulp-configuration.js'),
    gulp = require('gulp'),
    gap = require('gulp-append-prepend'),
    os = require("os"),
    upath = require('upath'),
    rls = require('remove-leading-slash'),
    path = require('path'),
    plumber = require('gulp-plumber'),
    chmod = require('gulp-chmod'),
    glob = require("glob");

module.exports = function () {

    var gitIgnoreRules = '';

    if (config.generateHtml.enable) {
        gitIgnoreRules += rls(upath.join(rls(config.generateHtml.output), '*.html')) + os.EOL;
    }

    if (config.generateCss.enable) {
        var css_Files = '';
        config.generateCss.src = [];
        var cssFiles = glob.sync(rls(upath.join(rls(config.generateCss.src_path), '*.scss')));
        cssFiles.forEach(function (file) {
            config.generateCss.src.push(file);
        });
        config.generateCss.src.forEach(function (file) {
            var filename = path.basename(file).replace('.scss', '');
            css_Files += rls(upath.join(rls(config.generateCss.output_path), filename + '.css')) + os.EOL +
                rls(upath.join(rls(config.generateCss.output_path), filename + '.css.map')) + os.EOL;
        });
        gitIgnoreRules += css_Files;
    }

    if (config.generateJs.enable) {
        gitIgnoreRules += rls(upath.join(rls(config.generateJs.output_path), config.generateJs.output_name + '.js.map')) + os.EOL +
            rls(upath.join(rls(config.generateJs.output_path), config.generateJs.output_name + '.js')) + os.EOL;
    }

    pump([
             gulp.src(upath.join('gulp-includes', '.gitignore')),
             plumber(),
             gap.prependText(
                 '### Rules generated by `gulp generate-gitignore` ###' + os.EOL +
                 gitIgnoreRules +
                 rls(config.generateFavicon.output) + os.EOL +
                 '### Rules from gulp-includes/.gitignore ###' + os.EOL
             ),
             gap.prependText('### /!\\ Do not edit this file. See : gulp-includes/.gitignore /!\\ ###' + os.EOL),
             gap.appendText(os.EOL + '### /!\\ Do not edit this file. See : gulp-includes/.gitignore /!\\ ###'),
             chmod(
                 {
                     owner : {
                         read : true,
                         write : true,
                         execute : true
                     },
                     group : {
                         read : true,
                         write : false,
                         execute : true
                     },
                     others : {
                         read : true,
                         write : false,
                         execute : true
                     }
                 }
             ),
             plumber.stop(),
             gulp.dest(rls('./'))
         ]);
};